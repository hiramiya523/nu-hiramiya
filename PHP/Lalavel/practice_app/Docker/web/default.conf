server {
    # listen:ipアドレス:80  なんて使い方もできる
    listen 80;
    # バーチャルホスト名
    server_name example.com;
    # ルートディレクトリ
    root /app/public;

    # クリックジャッキング対策
    add_header X-Frame-Options "SAMEORIGIN";
    # XSS対策 (フィルタ機能を強制的に有効)
    add_header X-XSS-Protection "1; mode=block";
    # ファイルの内容をContentTypeから判断させ、意図しないスクリプトを防ぐ
    add_header X-Content-Type-Options "nosniff";

    index index.php;
    # httpヘッダのContent Type に付与する文字コード
    charset utf-8;

    location / {
        # 左の引数から順に一致するものがないか探し、最後の引数のみ、リダイレクト先|コード を指定する 
        try_files $uri $uri/ /index.php?$query_string;
    }

    # faviconとか、クローラーのアクセスログを破棄してるっぽい
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    # 正規表現は、チルダから始まる
    location ~ \.php$ {
        # FastCGIサーバのアドレス(9000番ポート)
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        # アクセス制御で、全部アクセス拒否している
        deny all;

        # ex)
        # allow 192.168.00.00
        # deny 192.168.00.00
    }
}
