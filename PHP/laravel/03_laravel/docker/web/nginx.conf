user nginx;
# error_log /var/log/nginx/error.log warn;
error_log /var/log/nginx/error.log notice;
events{
    # eventsディレクティブがないと構文エラー
    # nginx のパフォーマンスやネットワークに関する設定
    # このブロックは必ずグローバルの位置になければなりません。 
    # 何も設定しなくても構いませんが、必ずこのブロックがあることが必要です。 
    # なければエラーとなります。主には、ワーカーの同時コネクション数や、 
    # キューイングアルゴリズムなど、ネットワークやパフォーマンスに関する 設定がされます
}
http{
    # mimeタイプの読み込み
    include /etc/nginx/mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    # httpディレクティブがないと構文エラー
    server {
        listen 80;
        # laravel の公開dir
        root /app/quick-laravel/public;
        index index.php index.html;
        server_name my_server;
        charset UTF-8;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # .から始まるファイルはwell-knownしか許可しない
        location ~ /\.(?!well-known).* {
            deny all;
        }

        # # "php"拡張子から始まるリクエストはphp-fpmに任せる
        # location ~ \.php {
        #     # 理解のため、webとappの階層を
        #     root /var/www/app/public;
        #     fastcgi_split_path_info ^(.+\.php)(/.+)$;
        #     fastcgi_pass app:9000;
        #     fastcgi_index index.php;
        #     include fastcgi_params;
        #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #     fastcgi_param PATH_INFO $fastcgi_path_info;
        # }

        location ~ \.php$ {
            # fast cgiパス
            fastcgi_pass app:9000;
            # $realpath_root: root,aliasディレクティブの値に対する実際の絶対パス名
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params;
        }
    }
}
